{"version":3,"sources":["components/rating.jsx","components/MovieCard.jsx","components/header.jsx","App.js","serviceWorker.js","index.js"],"names":["SimpleRating","props","Box","component","mb","borderColor","Typography","Rating","name","value","valeur","readOnly","MovieCard","list","filter","el","MovName","toUpperCase","includes","Keyword","map","description","src","imgUrl","alt","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","variant","noWrap","InputBase","onChange","e","SearchRate","target","placeholder","input","inputProps","Search","App","useState","KeyRate","setKeyRate","setKeyword","AllowAdd","setAllowAdd","Value","setValue","Movies","setMovies","MovieName","setMovieName","ImageURL","setImageURL","Descript","setDescript","x","Button","onClick","event","startIcon","noValidate","autoComplete","TextField","id","label","newValue","endIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sTAKe,SAASA,EAAaC,GAEjC,OACA,6BACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,WAAWC,GAAI,EAAGC,YAAY,eAC7C,kBAACC,EAAA,EAAD,CAAYH,UAAU,UAAtB,UACA,kBAACI,EAAA,EAAD,CAAQC,KAAK,YAAYC,MAAOR,EAAMS,OAAQC,UAAQ,MCS/CC,MAlBf,SAAmBX,GAEf,OACI,6BACCA,EAAMY,KAAKC,QAAO,SAAAC,GAAE,OAAEA,EAAGC,QAAQC,cAAcC,SAASjB,EAAMkB,QAAQF,kBAAgBG,KAAI,SAAAL,GAAE,OACzF,6BACA,4BAAKA,EAAGC,SAER,kBAAChB,EAAD,CAAcU,OAAQK,EAAGR,SAEzB,2BAAIQ,EAAGM,aACP,yBAAKC,IAAKP,EAAGQ,OAAQC,IAAI,W,+FCH/BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJJ,SAAU,EACVK,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLC,SAAU,WACVC,aAAcZ,EAAMa,MAAMD,aAC1BE,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZC,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BU,WAAYnB,EAAMK,QAAQ,GAC1Be,MAAO,SAGXC,WAAY,CACVC,QAAStB,EAAMK,QAAQ,EAAG,GAC1BkB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAAStB,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCyB,YAAY,cAAD,OAAgB9B,EAAMK,QAAQ,GAA9B,OACX0B,WAAY/B,EAAMgC,YAAYC,OAAO,SACrCb,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BW,MAAO,OACP,UAAW,CACTA,MAAO,cAMA,SAASc,EAAa5D,GACnC,IAAM6D,EAAUrC,IAEhB,OACE,yBAAKsC,UAAWD,EAAQlC,MACtB,kBAACoC,EAAA,EAAD,CAAQ1B,SAAS,UACf,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLJ,UAAWD,EAAQhC,WACnByB,MAAM,UACNa,aAAW,eAEX,kBAAC,IAAD,OAEF,kBAAC9D,EAAA,EAAD,CAAYyD,UAAWD,EAAQ7B,MAAOoC,QAAQ,KAAKC,QAAM,GAAzD,UAGA,yBAAKP,UAAWD,EAAQzB,QACtB,yBAAK0B,UAAWD,EAAQd,YACtB,kBAAC,IAAD,OAEF,kBAACuB,EAAA,EAAD,CACEC,SAAU,SAACC,GAAKxE,EAAMyE,WAAWD,EAAEE,OAAOlE,QAC1CmE,YAAY,wBACZd,QAAS,CACPlC,KAAMkC,EAAQR,UACduB,MAAOf,EAAQN,YAEjBsB,WAAY,CAAE,aAAc,YAE9B,kBAACP,EAAA,EAAD,CACEC,SAAU,SAACC,GAAKxE,EAAM8E,OAAON,EAAEE,OAAOlE,QACtCmE,YAAY,eACZd,QAAS,CACPlC,KAAMkC,EAAQR,UACduB,MAAOf,EAAQN,YAEjBsB,WAAY,CAAE,aAAc,gBCrB3BE,MAxEf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEiBF,mBAAS,IAF1B,mBAEN9D,EAFM,KAEGiE,EAFH,OAGmBH,oBAAS,GAH5B,mBAGNI,EAHM,KAGIC,EAHJ,OAIaL,mBAAS,GAJtB,mBAINM,EAJM,KAICC,EAJD,OAKeP,mBAAS,IALxB,mBAKNQ,EALM,KAKEC,EALF,OAMqBT,mBAAS,IAN9B,mBAMNU,EANM,KAMKC,EANL,OAOmBX,mBAAS,IAP5B,mBAONY,EAPM,KAOIC,EAPJ,OAQmBb,mBAAS,IAR5B,mBAQNc,EARM,KAQIC,EARJ,KA2Bb,OACE,yBAAKjC,UAAU,OACb,kBAAC,EAAD,CAAqBgB,OAnBZ,SAACkB,GACZb,EAAWa,IAkB4BvB,WAhBxB,SAACuB,GAChBd,EAAWc,MAgBT,kBAACC,EAAA,EAAD,CACEC,QAfiB,SAACC,GACtBd,GAAaD,IAeThB,QAAQ,YACRd,MAAM,UACN8C,UAAW,kBAAC,IAAD,OAJb,UAQA,yBAAKtC,WAAuB,IAAXsB,EAAiB,UAAU,QAC5C,0BAAOiB,YAAU,EAACC,aAAa,OAC/B,kBAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,WAAWjG,MAAOkF,EAAWnB,SAAU,SAAA4B,GAAK,OAAIR,EAAaQ,EAAMzB,OAAOlE,QAAQmE,YAAY,cACnI,kBAAC4B,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,WAAWjG,MAAOoF,EAAUrB,SAAU,SAAA4B,GAAK,OAAIN,EAAYM,EAAMzB,OAAOlE,QAAQmE,YAAY,cACjI,kBAAC4B,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,WAAWjG,MAAOsF,EAAUvB,SAAU,SAAA4B,GAAK,OAAIJ,EAAYI,EAAMzB,OAAOlE,QAAQmE,YAAY,gBACjI,kBAAC1E,EAAA,EAAD,CAAKC,UAAU,WAAWC,GAAI,EAAGC,YAAY,eAC3C,kBAACC,EAAA,EAAD,CAAYH,UAAU,UAAtB,UACA,kBAACI,EAAA,EAAD,CACIC,KAAK,oBACLC,MAAO8E,EACPf,SAAU,SAAC4B,EAAOO,GAClBnB,EAASmB,OAIb,kBAACT,EAAA,EAAD,CACAC,QAnCY,SAACC,GACjBV,EAAU,GAAD,mBAAKD,GAAL,CAAY,CAAEzE,QAAQ2E,EAAYpE,OAAOsE,EAAWxE,YAAY0E,EAAWxF,OAAOgF,MAC3FK,EAAa,IACbE,EAAY,IACZE,EAAY,IACZR,EAAS,GACTF,GAAaD,IA8BThB,QAAQ,YACRd,MAAM,UACNqD,QAAS,kBAAC,IAAD,OAJT,UAUF,6BAEA,kBAAC,EAAD,CAAW/F,KAAM4E,EAAStE,QAASA,EAAU+D,QAASA,OC/DxC2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0d3740b2.chunk.js","sourcesContent":["import React  from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SimpleRating(props) {\r\n    \r\n    return (\r\n    <div>\r\n        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Rating</Typography>\r\n        <Rating name=\"read-only\" value={props.valeur} readOnly />\r\n        </Box>\r\n    </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport SimpleRating from './rating';\r\nfunction MovieCard(props) {\r\n    \r\n    return (\r\n        <div>\r\n        {props.list.filter(el=>el.MovName.toUpperCase().includes(props.Keyword.toUpperCase())).map(el=>\r\n            <div >\r\n            <h1>{el.MovName}</h1>\r\n             {/* rating */}\r\n            <SimpleRating valeur={el.Rating} />\r\n            {/* end rating */}\r\n            <p>{el.description}</p>\r\n            <img src={el.imgUrl} alt=\"\"/>\r\n        </div>\r\n        \r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default MovieCard\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Movies\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              onChange={(e)=>{props.SearchRate(e.target.value)}}\r\n              placeholder=\"rating?(num of stars)\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            <InputBase\r\n              onChange={(e)=>{props.Search(e.target.value)}}\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport MovieCard from './components/MovieCard'\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PrimarySearchAppBar from './components/header'\nfunction App() {\n  const [KeyRate, setKeyRate] = useState(\"\");\n  const [Keyword, setKeyword] = useState(\"\");\n  const [AllowAdd, setAllowAdd] = useState(false)\n  const [Value, setValue] = useState(0);\n  const [Movies, setMovies] = useState([])\n  const [MovieName, setMovieName] = useState(\"\")\n  const [ImageURL, setImageURL] = useState(\"\")\n  const [Descript, setDescript] = useState(\"\")\n  // function declaration\n  const Search=(x)=>{\n    setKeyword(x)\n  }\n  const SearchRate=(x)=>{\n    setKeyRate(x)\n  }\n  const CahngeAllowAdd = (event)=>{\n    setAllowAdd(!AllowAdd)\n  }\n  const StoreName = (event) =>{\n    setMovies([...Movies,{ MovName:MovieName , imgUrl:ImageURL , description:Descript , Rating:Value }])\n    setMovieName(\"\")\n    setImageURL(\"\")\n    setDescript(\"\")\n    setValue(0)\n    setAllowAdd(!AllowAdd)\n  }\n  return (\n    <div className=\"App\">\n      <PrimarySearchAppBar Search={Search} SearchRate={SearchRate} />\n      <Button\n        onClick={CahngeAllowAdd}\n        variant=\"contained\"\n        color=\"default\"\n        startIcon={<CloudUploadIcon />}\n      >\n        Upload\n      </Button>\n      <div className={(AllowAdd===true)?\"display\":\"none\"} >\n      <form  noValidate autoComplete=\"off\">\n      <TextField id=\"standard-basic\" label=\"Standard\" value={MovieName} onChange={event => setMovieName(event.target.value)} placeholder=\"Film Name\" />\n      <TextField id=\"standard-basic\" label=\"Standard\" value={ImageURL} onChange={event => setImageURL(event.target.value)} placeholder=\"Image URL\" />\n      <TextField id=\"standard-basic\" label=\"Standard\" value={Descript} onChange={event => setDescript(event.target.value)} placeholder=\"Description\" />\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Rating</Typography>\n        <Rating\n            name=\"simple-controlled\"\n            value={Value}\n            onChange={(event, newValue) => {\n            setValue(newValue);\n        }}\n        />\n        </Box>\n        <Button\n        onClick={StoreName}\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<CloudUploadIcon />}\n      >\n        Send\n      </Button>\n      </form>\n      </div>\n      <div>\n      \n      <MovieCard list={Movies}  Keyword={Keyword}  KeyRate={KeyRate} />\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}